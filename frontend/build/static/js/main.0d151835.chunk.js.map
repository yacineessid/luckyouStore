{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","Screens/HomeScreen.js","Screens/ProductScreen.js","actions/cartActions.js","Screens/CartScreen.js","components/FormContainer.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/profileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","Screens/ShippingScreen.js","Screens/PaymentScreen.js","Screens/PlaceOrderScreen.js","Screens/UserListScreen.js","Screens/OrderScreen.js","Screens/UserEditScreen.js","Screens/ProductListScreen.js","Screens/ProductEditScreen.js","Screens/OrderListScreen.js","Screens/Products.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCTS_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","userList","users","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","style","color","variant","Header","setFilter","useDispatch","useSelector","Navbar","backgroundColor","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","render","Nav","onClick","Link","NavDropdown","title","Item","removeItem","isAdmin","Footer","Row","Col","Product","Card","_id","Img","src","image","Body","Title","as","Text","price","Message","children","Alert","varaiant","defaultProps","Loader","Spinner","animation","role","width","height","margin","display","listProducts","listProductDetails","HomeScreen","match","params","useEffect","justifyContent","marginTop","lineHeight","itemId","borderRadius","fluid","sm","md","lg","xl","ProductScreen","qty","setQty","Image","alt","ListGroup","description","countInStock","Array","keys","addToCart","setItem","stringify","CartScreen","location","productId","search","Number","split","console","log","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","disabled","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","Headers","post","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","href","OrderScreen","orderId","sdkReady","setSdkReady","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","ListGroupItem","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setCountInStock","setDescription","setCategory","gender","setGender","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","Products","App","elm","exact","path","props","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0d151835.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCTS_LIST_SUCCESS= 'PRODUCTS_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCTS_DETAILS_SUCCESS= 'PRODUCTS_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS= 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS= 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS= 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS '\nexport const CART_SAVE_PAYMENT_METHOD= 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n \n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\n","export const ORDER_CREATE_REQUEST ='ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS ='ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL ='ORDER_CREATE_FAIL '\n\n\nexport const ORDER_DETAILS_REQUEST ='ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS ='ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL ='ORDER_DETAILS_FAIL '\n\n\n\nexport const ORDER_PAY_REQUEST ='ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS ='ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL ='ORDER_PAY_FAIL '\nexport const ORDER_PAY_RESET ='ORDER_PAY_RESET '\n\n\nexport const ORDER_LIST_MY_REQUEST ='ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS ='ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL ='ORDER_LIST_MY_FAIL '\nexport const ORDER_LIST_MY_RESET ='ORDER_LIST_MY_RESET '\n\n\nexport const ORDER_LIST_REQUEST ='ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS ='ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL ='ORDER_LIST_FAIL '\n\nexport const ORDER_DELIVER_REQUEST ='ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS ='ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL ='ORDER_DELIVER_FAIL '\nexport const ORDER_DELIVER_RESET ='ORDER_DELIVER_RESET '","  \nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {productListReducer ,productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer} from './reducers/productReducers'\nimport {cartReducer} from './reducers/cartReducers'\nimport  {userDeleteReducer, userDetailsReducer, userListReducer, userLOginReducer,\n  userRegisterReducer, userUpdateProfilesReducer, userUpdateReducer,  } from './reducers/userReducers'\n  import {orderCreateReducer, orderDetailsReducer, orderPayReducer , orderListMyReducer, orderListReducer, orderDeliverReducer} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList :productListReducer,\n    productDetails:productDetailsReducer,\n    cart :cartReducer, \n    userLogin : userLOginReducer ,\n    userRegister :userRegisterReducer,\n    userDetails :userDetailsReducer ,\n    userUpdateProfile:userUpdateProfilesReducer,\n    userList:userListReducer,\n    orderCreate: orderCreateReducer ,\n    orderDetails :orderDetailsReducer,\n    orderPay : orderPayReducer,\n    orderListMy :orderListMyReducer,\n    userDelete :userDeleteReducer,\n    userUpdate :userUpdateReducer ,\n    productDelete :productDeleteReducer,\n    productCreate :productCreateReducer,\n    productUpdate :productUpdateReducer ,\n    orderList : orderListReducer ,\n    orderDeliver :orderDeliverReducer,\n   \n})\n\nconst cartItemsFromStorage =localStorage.getItem('cartItems')  ? JSON.parse\n(localStorage.getItem('cartItems')) :[]\n\nconst userInfoFromStorage =localStorage.getItem('userInfo')  ? JSON.parse\n(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressfromStorage =localStorage.getItem('shippingAddress')  ? JSON.parse\n(localStorage.getItem('shippingAddress')) : {}\n\n\n\n\nconst initialState  = {\n  cart :{\n    cartItems : cartItemsFromStorage ,\n    shippingAddress : shippingAddressfromStorage,\n  },\n  userLogin :{\n    userInfo: userInfoFromStorage\n  }\n}\n \nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import { PRODUCT_LIST_FAIL, \n    PRODUCT_LIST_REQUEST, \n    PRODUCTS_LIST_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCTS_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET} from \"../constants/productConstants\"\n\n\n\n    export const productListReducer = (state ={products:[]} , action) =>{\nswitch (action.type) {\n    \n    case PRODUCT_LIST_REQUEST:\n   \n    return {loading :true , products : []}\n    \n    case PRODUCTS_LIST_SUCCESS:\n      \n    return {loading:false , products:action.payload}\n      \n    case PRODUCT_LIST_FAIL:\n           \n    return {loading:false, error:action.payload}\n            \n    \n    default :\n            return state\n\n}\n}\n\n\nexport const productDetailsReducer = (state ={product: {}} , \n    action) =>{\n    switch (action.type) {\n        \n        case PRODUCT_DETAILS_REQUEST:\n       \n        return {loading :true , ...state}\n        \n        case PRODUCTS_DETAILS_SUCCESS:\n          \n        return {loading:false , product:action.payload}\n          \n        case PRODUCT_DETAILS_FAIL:\n               \n        return {loading:false, error:action.payload}\n                \n        \n        default :\n                return state\n    \n    }\n    }\n\n    export const productDeleteReducer = (state ={} , \n        action) =>{\n        switch (action.type) {\n            \n            case PRODUCT_DELETE_REQUEST:\n           \n            return {loading :true }\n            \n            case PRODUCT_DELETE_SUCCESS:\n              \n            return {loading:false , success :true}\n              \n            case PRODUCT_DELETE_FAIL:\n                   \n            return {loading:false, error:action.payload}\n                    \n            \n            default :\n                    return state\n        \n        }\n        }\n\n\n        export const productCreateReducer = (state ={} , \n            action) =>{\n            switch (action.type) {\n                \n                case PRODUCT_CREATE_REQUEST:\n               \n                return {loading :true }\n                \n                case PRODUCT_CREATE_SUCCESS:\n                  \n                return {loading:false , success :true , product:action.payload}\n                  \n                case PRODUCT_CREATE_FAIL:\n                       \n                return {loading:false, error:action.payload}\n\n                case PRODUCT_CREATE_RESET :\n                    return {}\n                        \n                \n                default :\n                        return state\n            \n            }\n            }\n\n\n            export const productUpdateReducer = (state ={product:{}} , \n                action) =>{\n                switch (action.type) {\n                    \n                    case PRODUCT_UPDATE_REQUEST:\n                   \n                    return {loading :true }\n                    \n                    case PRODUCT_UPDATE_SUCCESS:\n                      \n                    return {loading:false , success :true , product:action.payload}\n                      \n                    case PRODUCT_UPDATE_FAIL:\n                           \n                    return {loading:false, error:action.payload}\n    \n                    case PRODUCT_UPDATE_RESET :\n                        return {product :action.payload}\n                            \n                    \n                    default :\n                            return state\n                \n                }\n                }","import {CART_ADD_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\n\nimport { CART_REMOVE_ITEM} from '../constants/cartConstants'\n\n\nexport const cartReducer = (state = {cartItems:[] , shippingAddress:{} }, action)=>{\n    switch (action.type) {\n        case  CART_ADD_ITEM: \n\n        const item = action.payload\n        const existItem = state.cartItems.find((x) => x.product === item.product)             \n    if (existItem) {\n         return { \n    ...state,\n    cartItems:state.cartItems.map((x)=> \n    x.product===existItem.product? item : x),\n    }\n \n    }else {\n        return {\n            ...state,\n            cartItems: [...state.cartItems ,item]\n        }\n    }\n    case CART_REMOVE_ITEM:\n   return  {\n       ...state , \n       cartItems : state.cartItems.filter((x) => x.product !==action.payload),\n   }\n        \n                case CART_SAVE_SHIPPING_ADDRESS:\n                return  {\n                    ...state , \n                    shippingAddress :action.payload,\n                }\n\n                case CART_SAVE_PAYMENT_METHOD:\n                    return  {\n                        ...state, \n                        paymentMethod :action.payload,\n                    }\n                     default \n                            :return state \n                            \n                        } \n                            }\n\n\n\n \n","import {USER_LOGIN_REQUEST ,\n    USER_LOGIN_SUCCESS , \n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\nUSER_REGISTER_REQUEST ,\nUSER_REGISTER_SUCCESS ,\nUSER_REGISTER_FAIL,\nUSER_DETAILS_REQUEST,\nUSER_DETAILS_SUCCESS,\nUSER_DETAILS_FAIL,\nUSER_UPDATE_PROFILE_REQUEST,\nUSER_UPDATE_PROFILE_SUCCESS,\nUSER_UPDATE_PROFILE_FAIL,\nUSER_LIST_REQUEST,\nUSER_LIST_SUCCESS,\nUSER_LIST_FAIL,\nUSER_LIST_RESET,\nUSER_DETAILS_RESET,\nUSER_DELETE_REQUEST,\nUSER_DELETE_SUCCESS,\nUSER_DELETE_FAIL,\nUSER_UPDATE_REQUEST,\nUSER_UPDATE_SUCCESS,\nUSER_UPDATE_FAIL,\nUSER_UPDATE_RESET} from '../constants/userConstants'\n\nexport const userLOginReducer = (state ={product: {}} , \n    action) =>{\n    switch (action.type) {\n        \n        case USER_LOGIN_REQUEST:\n       \n        return {loading :true }\n        \n        case USER_LOGIN_SUCCESS:\n          \n        return {loading:false , userInfo:action.payload}\n          \n        case USER_LOGIN_FAIL:\n               \n        return {loading:false, error:action.payload}\n\n        case USER_LOGOUT: \n        return  {}\n                \n        default :\n                return state\n    \n    }\n    }\n\n\n\n    export const userRegisterReducer = (state ={} ,action) =>\n    {\n        switch (action.type) {\n            \n            case USER_REGISTER_REQUEST:\n           \n            return {loading :true}\n            \n            case USER_REGISTER_SUCCESS:\n              \n            return {loading:false , userInfo: action.payload}\n              \n            case USER_REGISTER_FAIL:\n                   \n            return {loading:false, error:action.payload}\n    \n                    \n            default :\n                    return state\n        \n        }\n        }\n\n\n        export const userDetailsReducer = (state ={user:{}} ,action) =>\n        {\n            switch (action.type) {\n                \n                case USER_DETAILS_REQUEST:\n               \n                return {...state, loading :true}\n                \n                case USER_DETAILS_SUCCESS:\n                  \n                return {loading:false , user: action.payload}\n                  \n                case USER_DETAILS_FAIL:\n                       \n                return {loading:false, error: action.payload}\n\n                case USER_DETAILS_RESET:\n                       \n                    return {}\n            \n        \n                        \n                default :\n                        return state\n            \n            }\n            }\n\n\n\n            \n        export const userUpdateProfilesReducer = (state ={} ,action) =>\n        {\n            switch (action.type) {\n                \n                case USER_UPDATE_PROFILE_REQUEST:\n               \n                return { loading :true}\n                \n                case USER_UPDATE_PROFILE_SUCCESS:\n                  \n                return {loading:false , success:true , userInfo: action.payload}\n                  \n                case USER_UPDATE_PROFILE_FAIL:\n                       \n                return {loading:false, error: action.payload}\n        \n                        \n                default :\n                        return state\n            \n            }\n            }\n\n\n           \n            \n\n            export const userListReducer = (state ={users :[]} ,action) =>\n            {\n                switch (action.type) {\n                    \n                    case USER_LIST_REQUEST:\n                   \n                    return {loading :true}\n                    \n                    case USER_LIST_SUCCESS:\n                      \n                    return {loading:false , users: action.payload}\n                      \n                    case USER_LIST_FAIL:\n                           \n                    return {loading:false, error:action.payload}\n\n                    case USER_LIST_RESET:\n                           \n                    return {users:[]}\n            \n                            \n                    default :\n                            return state\n                \n                }\n                }\n\n\n                            \n\n            export const userDeleteReducer = (state ={} ,action) =>\n            {\n                switch (action.type) {\n                    \n                    case USER_DELETE_REQUEST:\n                   \n                    return {loading :true}\n                    \n                    case USER_DELETE_SUCCESS:\n                      \n                    return {loading:false , success: true}\n                      \n                    case USER_DELETE_FAIL:\n                           \n                    return {loading:false, error:action.payload}\n                        \n                    default :\n                            return state\n                \n                }\n                }\n\n\n                export const userUpdateReducer = (state = {user :{}} ,action) =>\n                {\n                    switch (action.type) {\n                        \n                        case USER_UPDATE_REQUEST:\n                       \n                        return {loading :true}\n                        \n                        case USER_UPDATE_SUCCESS:\n                          \n                        return {loading:false , success: true}\n                          \n                        case USER_UPDATE_FAIL:\n                               \n                        return {loading:false, error:action.payload}\n\n                        case USER_UPDATE_RESET :\n                            return {\n                                 user :{}}\n                            \n                        default :\n                                return state\n                    \n                    }\n                    }\n\n\n        ","import {ORDER_CREATE_REQUEST ,ORDER_CREATE_SUCCESS,\n     ORDER_CREATE_FAIL,\n     ORDER_DETAILS_FAIL,\n     ORDER_DETAILS_SUCCESS,\n     ORDER_DETAILS_REQUEST,\n     ORDER_PAY_REQUEST,\n     ORDER_PAY_SUCCESS,\n     ORDER_PAY_FAIL,\n     ORDER_PAY_RESET,\n     ORDER_LIST_MY_REQUEST,\n     ORDER_LIST_MY_SUCCESS,\n     ORDER_LIST_MY_FAIL,\n     ORDER_LIST_REQUEST,\n     ORDER_LIST_SUCCESS,\n     ORDER_LIST_FAIL,\n     ORDER_DELIVER_RESET,\n     ORDER_DELIVER_FAIL,\n     ORDER_DELIVER_SUCCESS,\n     ORDER_DELIVER_REQUEST} from '../constants/orderConstants'\n\n\n    export const orderCreateReducer = (state ={} , action )=>{\n        switch (action.type) {\n            case ORDER_CREATE_REQUEST :\n                return{\n                    loading: true\n                }\n                case ORDER_CREATE_SUCCESS :\n                    return {\n                        loading :false ,\n                        success : true,\n                        order :action.payload\n                    }\n\n                     case ORDER_CREATE_FAIL :\n                         return {\n                             loading :false ,\n                             error :action.payload,\n                         }\n        \n            default:\n               return state ;\n        }\n    }\n\n    export const orderDetailsReducer = (\n        state = { loading: true, orderItems: [], shippingAddress: {} },\n        action\n      ) => {\n        switch (action.type) {\n          case ORDER_DETAILS_REQUEST:\n            return {\n              ...state,\n              loading: true,\n            }\n          case ORDER_DETAILS_SUCCESS:\n            return {\n              loading: false,\n              order: action.payload,\n            }\n          case ORDER_DETAILS_FAIL:\n            return {\n              loading: false,\n              error: action.payload,\n            }\n          default:\n            return state ;\n        }\n      }\n      \n\n\n      export const orderPayReducer = (\n        state = {}, action\n        ) => {\n        switch (action.type) {\n          case ORDER_PAY_REQUEST:\n            return {\n              loading: true,\n            }\n          case ORDER_PAY_SUCCESS:\n            return {\n              loading: false,\n              success: true,\n            }\n          case ORDER_PAY_FAIL:\n            return {\n              loading: false,\n              error: action.payload,\n            }\n            case ORDER_PAY_RESET :\n              return{}\n          default:\n            return state ;\n        }\n      }\n      \n\n      export const orderListMyReducer = (  state = {orders :[]}, action   ) =>\n       {\n        switch (action.type) {\n          case ORDER_LIST_MY_REQUEST:\n            return {\n              loading: true,\n            }\n          case ORDER_LIST_MY_SUCCESS:\n            return {\n              loading: false,\n              orders: action.payload,\n            }\n          case ORDER_LIST_MY_FAIL:\n            return {\n              loading: false,\n              error: action.payload,\n            }\n            case ORDER_PAY_RESET :\n              return{}\n          default:\n            return state ;\n        }\n      }\n\n\n      export const orderListReducer = (  state = {orders :[]}, action   ) =>\n      {\n       switch (action.type) {\n         case ORDER_LIST_REQUEST:\n           return {\n             loading: true,\n           }\n         case ORDER_LIST_SUCCESS:\n           return {\n             loading: false,\n             orders: action.payload,\n           }\n         case ORDER_LIST_FAIL:\n           return {\n             loading: false,\n             error: action.payload,\n           }\n           \n         default:\n           return state \n       }\n     }\n     \n      \n\n\n     export const orderDeliverReducer = (\n      state = {}, action\n      ) => {\n      switch (action.type) {\n        case ORDER_DELIVER_REQUEST :\n          return {\n            loading: true,\n          }\n        case ORDER_DELIVER_SUCCESS:\n          return {\n            loading: false,\n            success: true,\n          }\n        case ORDER_DELIVER_FAIL:\n          return {\n            loading: false,\n            error: action.payload,\n          }\n          case ORDER_DELIVER_RESET :\n            return{}\n        default:\n          return state ;\n      }\n    }","import axios from \"axios\"\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\nimport { USER_DETAILS_FAIL, \n  USER_DETAILS_REQUEST, \n  USER_DETAILS_SUCCESS, \n  USER_LIST_FAIL,\n   USER_LIST_REQUEST,\n    USER_LIST_SUCCESS, \n   USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT, USER_REGISTER_FAIL, \n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS, \n    USER_UPDATE_PROFILE_FAIL, \n    USER_UPDATE_PROFILE_REQUEST, \n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_LIST_RESET,\n    USER_DETAILS_RESET,\n    USER_DELETE_FAIL,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_REQUEST\n     } from \"../constants/userConstants\"\n\nexport const login = (email ,password) =>async (dispatch) =>{\n   try {\n    dispatch ({\n        type :USER_LOGIN_REQUEST\n    })\n    const config ={\n        Headers:{\n            'content-type' : 'application/json'\n        }\n    }\n    \n    const {data} = await axios.post('/api/users/login' ,{email ,password}, config)\n   \n     dispatch ( {\n         type :USER_LOGIN_SUCCESS ,\n         payload :data, \n     })\n       localStorage.setItem('userInfo' , JSON.stringify(data))\n   } catch (error) {\n    dispatch({\n        type: USER_LOGIN_FAIL ,\n        payload: error.response && error.response.data.message ?\n            error.response.data.message :\n            error.message,\n })\n       \n   }\n}\n\nexport const logout  = () =>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type:USER_LOGOUT})\n    dispatch({type:USER_DETAILS_RESET})\n    dispatch({type:ORDER_LIST_MY_RESET})\n    dispatch({type:USER_LIST_RESET})\n}\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST,\n      })\n  \n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n  \n      const { data } = await axios.post(\n        '/api/users',\n        { name, email, password },\n        config\n      )\n  \n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data,\n      })\n  \n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      })\n  \n      localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\n\n  export const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_DETAILS_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(`/api/users/${id}`, config)\n  \n      dispatch({\n        type: USER_DETAILS_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: USER_DETAILS_FAIL,\n        payload:  error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n      })\n    }\n  }\n\n\n  export const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_PROFILE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.put(`/api/users/profile`,user, config)\n  \n      dispatch({\n        type: USER_UPDATE_PROFILE_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload:  error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n      })\n    }\n  }\n\n  export const listUsers = () => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_LIST_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(`/api/users/`, config)\n  \n      dispatch({\n        type: USER_LIST_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: USER_LIST_FAIL,\n        payload:  error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n      })\n    }\n  }\n\n\n  export const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_DELETE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n       \n      await axios.delete(`/api/users/${id}`, config)\n  \n      dispatch({\n        type: USER_DELETE_SUCCESS,\n       \n      })\n    } catch (error) {\n      dispatch({\n        type: USER_DELETE_FAIL,\n        payload:  error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n      })\n    }\n  }\n\n  export const updateUser = (user) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          'content-type' : 'application/json' ,\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n       \n       const {data} = await axios.put(`/api/users/${user._id}`, user , config)\n  \n      dispatch({\n        type: USER_UPDATE_SUCCESS\n      })\n\n      dispatch ( {type :USER_DETAILS_SUCCESS ,\n          payload :data})\n\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_FAIL,\n        payload:  error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message,\n      })\n    }\n  }","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form  onSubmit={submitHandler} inline >\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-1 ml-sm-1'\r\n      ></Form.Control>\r\n      <Button style={{color:'white'}} type='submit' variant='gray' className='p-1'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\nimport {Route} from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown  , Button } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\n\n\nimport SearchBox from './SearchBox'\n\nconst Header = ({setFilter}) => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header style={{color:'white'}}>\n      <Navbar style={{backgroundColor:'gray'}} variant='dark' expand='lg' collapseOnSelect>\n        <Container  >\n          <LinkContainer to='/'>\n            <Navbar.Brand>LUCKYOU STYLE </Navbar.Brand>\n          </LinkContainer>\n\n           \n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n          <Route    render={({ history }) => <SearchBox  history={history} />} />\n           <Nav className='ml-auto'>\n         \n           <LinkContainer style={{backgroundColor:'inherit'}} to='/products/men'>\n            <Button    name=\"men\" onClick={(e)=>setFilter(e.target.name)}>Men</Button>              \n            </LinkContainer>    \n            <LinkContainer style={{backgroundColor:'inherit'}} to='/products/women'>\n            <Button   name=\"women\" onClick={(e)=>setFilter(e.target.name)}>Women </Button>\n           \n            </LinkContainer>\n                \n             <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i  className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown style={{color:'white'}} title={userInfo.user.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer style={{color:'white'}} to='/login'>\n                  <Nav.Link>\n                    <i  className='fas fa-user'></i> Sign In \n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.user.isAdmin && (\n                  <NavDropdown  title='Admin' id='adminmenu'>\n                  <LinkContainer  to='/admin/userlist'>\n                    <NavDropdown.Item >Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer  to='/admin/productlist'>\n                  <NavDropdown.Item >  Products </NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer  to='/admin/orderlist'>\n                  <NavDropdown.Item >  Orders </NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n              \n            </Nav>\n          </Navbar.Collapse>\n\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport {Container , Col, Row} from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        copyright &LuckyouShop\n                    </Col>\n                    \n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Footer\n"," import React from 'react'\n import {Link} from 'react-router-dom'\n import {Card} from 'react-bootstrap'\n \n const Product = ({ product }) => {\n    return (\n      <Card className='my-3 p-3 rounded'>\n        <Link  to = {`/product/${product._id}`}>\n          <Card.Img  src={product.image} variant='top'/>\n        </Link>\n        \n      <Card.Body>\n        <Link to ={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n        </Card>\n     )\n }\n \n export default Product\n ","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({variant ,children}) => {\n    return (\n        <Alert varaiant={variant}>{children} \n        \n        </Alert>)\n        }\n        Message.defaultProps = {\n            variant :'info',\n        }\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\nconst Loader = () => {\n    return (\n        <Spinner animation = 'border'\n        role = 'status'\n        style={{\n            width: '100px',\n            height:'100px',\n            margin:'auto',\n            display:'block',\n        }}\n        >\n          <span className= 'sr-only'>loading...</span>  \n        </Spinner>\n    )\n}\n\nexport default Loader\n","import axios from 'axios'\nimport {\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCTS_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n} from '../constants/productConstants' \n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_LIST_REQUEST\n        })\n           const {data}  = await axios.get(`/api/products?keyword=${keyword}`)\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data  \n        })\n    } catch (error) {\n        dispatch({\n                type: PRODUCT_LIST_FAIL,\n                payload: error.response && error.response.data.message ?\n                    error.response.data.message :\n                    error.message,\n         })\n        }\n    }\n\n    export const listProductDetails = (id) => async (dispatch) => {\n        try {\n            dispatch({\n                type: PRODUCT_DETAILS_REQUEST\n            })\n            const {\n                data\n            } = await axios.get(`/api/products/${id}`)\n            dispatch({\n                type: PRODUCTS_DETAILS_SUCCESS,\n                payload: data,\n            })\n        } catch (error) {\n            dispatch({\n                    type: PRODUCT_DETAILS_FAIL ,\n                    payload: error.response && error.response.data.message ?\n                        error.response.data.message :\n                        error.message,\n             })\n            }\n        }\n\n\n        export const deleteProduct = (id) => async (dispatch, getState) => {\n            try {\n              dispatch({\n                type: PRODUCT_DELETE_REQUEST,\n              })\n          \n              const {\n                userLogin: { userInfo },\n              } = getState()\n          \n              const config = {\n                headers: {\n                  \n                  Authorization: `Bearer ${userInfo.token}`,\n                },\n              }\n          \n           await axios.delete(`/api/products/${id}`,config)\n          \n              dispatch({\n                type: PRODUCT_DELETE_SUCCESS,  \n             \n              })\n            } catch (error) {\n              dispatch({\n                type: PRODUCT_DELETE_FAIL,\n                payload:  error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n              })\n            }\n          }\n        \n\n\n          \n        export const createProduct = () => async (dispatch, getState) => {\n          try {\n            dispatch({\n              type: PRODUCT_CREATE_REQUEST,\n            })\n        \n            const {\n              userLogin: { userInfo },\n            } = getState()\n        \n            const config = {\n              headers: {\n                \n                Authorization: `Bearer ${userInfo.token}`,\n              },\n            }\n        \n         const {data} =  await axios.post(`/api/products/`, {} , config)\n        \n            dispatch({\n              type: PRODUCT_CREATE_SUCCESS,  \n              payload :data\n           \n            })\n          } catch (error) {\n            dispatch({\n              type: PRODUCT_CREATE_FAIL,\n              payload:  error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n            })\n          }\n        }\n      \n\n\n        export const updateProduct = (product) => async (dispatch, getState) => {\n          try {\n            dispatch({\n              type: PRODUCT_UPDATE_REQUEST,\n            })\n        \n            const {\n              userLogin: { userInfo },\n            } = getState()\n        \n            const config = {\n              headers: {\n                'content-type' :'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n              },\n            }\n        \n         const {data} =  await axios.put(`/api/products/${product._id}`, product , config)\n        \n            dispatch({\n              type: PRODUCT_UPDATE_SUCCESS,  \n              payload :data\n           \n            })\n          } catch (error) {\n            dispatch({\n              type: PRODUCT_UPDATE_FAIL,\n              payload:  error.response && error.response.data.message\n              ? error.response.data.message\n              : error.message,\n            })\n          }\n        }\n    \n          \n        \n\n\n\n","import React, { useEffect } from \"react\";\nimport {\n  MDBCarousel,\n  MDBCarouselInner,\n  MDBCarouselItem,\n  MDBCarouselElement,\n} from 'mdb-react-ui-kit';\nimport { Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = ({match}) => {\n  const keyword =  match.params.keyword\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword))\n  }, [dispatch , keyword])\n\n  return (\n    <>\n  \n      <div style={{display:\"flex\", justifyContent:\"space-between\", marginTop:\"40px\"}}>\n      <h3 style={{color:'GrayText' ,marginTop:\"120px\" , lineHeight:'35px' }}>Get more Style with <br/> Luckyou accessories! </h3>\n      <MDBCarousel>\n      <MDBCarouselInner>\n        <MDBCarouselItem itemId={0}>\n          <MDBCarouselElement src= \"https://images.unsplash.com/photo-1518912217224-3b1ae276c89e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=756&q=80\"  style={{borderRadius:\"5px\" , height :'450px'}}  fluid />   \n\n        </MDBCarouselItem>\n        <MDBCarouselItem itemId={1}>\n          <MDBCarouselElement src=\"https://images.unsplash.com/photo-1450297166380-cabe503887e5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=745&q=80\" style={{borderRadius:\"5px\" ,height :\"450px\"}}  fluid /> \n\n        </MDBCarouselItem>\n        <MDBCarouselItem itemId={2}>\n          <MDBCarouselElement src=        \"https://images.unsplash.com/photo-1496345875659-11f7dd282d1d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\" style={{borderRadius:\"5px\" ,height :\"450px\"}}  fluid />\n        </MDBCarouselItem>\n      </MDBCarouselInner>\n    </MDBCarousel>\n    </div>\n    \n      <br/>\n       <h4 style={{ color:\"GrayText\" , marginTop:\"20px\"}}>Summer style </h4>\n      {loading ? (\n        <Loader/>\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, Image, ListGroup, Card, Button ,Form } from \"react-bootstrap\";\nimport { listProductDetails, listProducts } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst ProductScreen = ({ history , match }) => {\n    const [qty ,setQty] = useState(1)\n\n  const dispatch = useDispatch();\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  useEffect(() => {\n    dispatch(listProducts());\n\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch ,match]);\n \n  const addToCartHandler =() =>{\n\nhistory.push(`/cart/${match.params.id}?qty=${qty}`)\n\n  }\n\n  return (\n    <>\n\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : product&&(\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n              <ListGroup.Item>\n                description: ${product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      <strong>\n                        $\n                        {product.countInStock > 0 ? \"in Stock\" : \"out of Stock\"}\n                      </strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                 \n                {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                <ListGroup.Item>\n                  <Button\n                  onClick={addToCartHandler}\n                  className=\"btn-block\" type=\"button\">\n                    Add to Card\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from 'axios'\n import { CART_ADD_ITEM ,CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS , CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\n\n export const addToCart = (id ,qty)=> async (dispatch , getState)=>{\n\n    const {data} = await  axios.get  (`/api/products/${id}`)\n    \n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n          product: data._id,\n          name: data.name,\n          image: data.image,\n          price: data.price,\n          countInStock: data.countInStock,\n          qty,\n        },\n      })\n    \n      localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n    }\n    \n    export const removeFromCart = (id)  =>(dispatch , getState)=>{\n        dispatch({\n            type: CART_REMOVE_ITEM ,\n            payload :id\n        })\n        localStorage.setItem('cartItems' ,JSON.stringify(getState().cart.cartItems))\n    }\n\n    export const saveShippingAddress = (data) => (dispatch) => {\n      dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n      })\n    \n      localStorage.setItem('shippingAddress', JSON.stringify(data))\n    }\n    \n\n    export const savePaymentMethod = (data ) => (dispatch) => {\n      dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n      })\n    \n      localStorage.setItem('paymentMethod', JSON.stringify(data))\n    } \n    ","import React ,{useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport{useDispatch ,useSelector} from 'react-redux'\nimport{Row , Col , Card ,ListGroup ,Image , Form , Button} from 'react-bootstrap'\nimport Message from '../components/Message'\nimport {addToCart,removeFromCart} from '../actions/cartActions'\n\n\nconst CartScreen = ({match,location,history}) => {\n    const productId = match.params.id\n    const qty = location.search? Number(location.search.split('=')[1]): 1\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state=>state.cart)\n    \n    const {cartItems} = cart\n    console.log(cartItems)\n\n    useEffect(()=>{\n        if(productId){\n            dispatch(addToCart(productId,qty))\n        }\n    },[dispatch, productId ,qty])\n\n    const removeFromCartHandler = (id) => {\n     dispatch (removeFromCart(id))\n      } \n    \n      const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n      }\n\n    return (\n    \n\n        <Row>\n        <Col md={8}>\n          <h1>Shopping Cart</h1>\n          {cartItems.length === 0 ? (\n            <Message>\n              Your cart is empty <Link to='/'>Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant='flush'>\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>${item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control\n                        as='select'\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={2}>\n                      <Button\n                        type='button'\n                        variant='light'\n                        onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                  items\n                </h2>\n                $\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cartItems.length === 0}\n                  onClick={checkoutHandler}\n                >\n                  Proceed To Checkout\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n  \n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading , error , userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport {ORDER_CREATE_REQUEST , ORDER_CREATE_SUCCESS , \n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_REQUEST} from '../constants/orderConstants'\n\n    export const createOrder = (order) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_CREATE_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.post(`/api/orders`, order, config)\n      \n          dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n          })\n        } catch (error) {\n          dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:  error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n          })\n        }\n      }\n    \n\n      export const getOrderDetails = (id) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_DETAILS_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.get(`/api/orders/${id}`, config)\n      \n          dispatch({\n            type: ORDER_DETAILS_SUCCESS,  \n            payload: data,\n          })\n        } catch (error) {\n          dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload:  error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n          })\n        }\n      }\n    \n\n      export const payOrder = (orderId  ,paymentResult) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_PAY_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              'content-Type' :'application/json',\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult,config)\n      \n          dispatch({\n            type: ORDER_PAY_SUCCESS,  \n            payload: data,\n          })\n        } catch (error) {\n          dispatch({\n            type: ORDER_PAY_FAIL,\n            payload:  error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n          })\n        }\n      }\n\n\n      export const listMyOrders = () => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              \n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.get(`/api/orders/myorders`,config)\n      \n          dispatch({\n            type: ORDER_LIST_MY_SUCCESS,  \n            payload: data,\n          })\n        } catch (error) {\n          dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload:  error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n          })\n        }\n      }\n    \n\n      export const listOrders = () => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_LIST_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              \n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.get(`/api/orders`,config)\n      \n          dispatch({\n            type: ORDER_LIST_SUCCESS,  \n            payload: data,\n          })\n        } catch (error) {\n          dispatch({\n            type: ORDER_LIST_FAIL,\n            payload:  error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n          })\n        }\n      }\n    \n\n      export const deliverOrder = (order) => async (dispatch, getState) => {\n        try {\n          dispatch({\n            type: ORDER_DELIVER_REQUEST,\n          })\n      \n          const {\n            userLogin: { userInfo },\n          } = getState()\n      \n          const config = {\n            headers: {\n              Authorization: `Bearer ${userInfo.token}`,\n            },\n          }\n      \n          const { data } = await axios.put(`/api/orders/${order._id}/DELIVER`, {} , config)\n      \n          dispatch({\n            type: ORDER_DELIVER_SUCCESS,  \n            payload: data,\n          })\n        } catch (error) {\n          dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload:  error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n          })\n        }\n      }\n\n      \n    ","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n        <CheckoutSteps step1 step2></CheckoutSteps>\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\n\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen ","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({history}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo} = userLogin\r\n\r\n   const userDelete= useSelector((state) => state.userDelete)\r\n  const { success:successDelete} = userDelete\r\n\r\n  useEffect(() => {\r\n    if(userInfo &&userInfo.user.isAdmin){\r\n      dispatch(listUsers())\r\n    }  else {\r\n      history.push('./login')\r\n    }\r\n  }, [dispatch ,history , successDelete ,userInfo])\r\n  \r\n const  deleteHandler = (id) =>{\r\n   if(window.confirm ('are you sure'))\r\n   dispatch(deleteUser(id))\r\n\r\n }\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}>\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import React, { useEffect , useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, ListGroupItem , Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport axios from 'axios'\r\nimport Message from '../components/Message'\r\nimport Loader  from '../components/CheckoutSteps'\r\nimport {deliverOrder, getOrderDetails, payOrder} from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET , ORDER_DELIVER_RESET   } from '../constants/orderConstants'\r\n\r\n\r\n\r\nconst OrderScreen = ({match}) => {\r\n\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady  , setSdkReady] =useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { success:successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const {  loading:loadingDeliver , success:successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo} = userLogin\r\n\r\n  if(!loading) {\r\n //   Calculate prices \r\n const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  order.itemsPrice = addDecimals(\r\n    order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if(!order || successPay ||successDeliver) {\r\n      dispatch({type: ORDER_PAY_RESET})\r\n\r\n      dispatch ({type :ORDER_DELIVER_RESET})\r\n\r\n      dispatch (getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if(!window.paypal) {\r\n        addPayPalScript()\r\n      } else{\r\n        setSdkReady(true)\r\n      }\r\n\r\n    }\r\n   \r\n  }, [dispatch , orderId ,successPay , successDeliver , order])\r\n\r\nconst successPaymentHandler =(paymentResult)=>{\r\n\r\n  console.log(paymentResult)\r\n    dispatch(payOrder (orderId, paymentResult)) \r\n    }\r\n\r\n    const deliverHandler = () =>{\r\n      dispatch(deliverOrder(order))\r\n\r\n}\r\n\r\n  return loading? (<Loader/> ):error? (<Message variant='danger'>{error}\r\n  </Message> ) : ( \r\n  <>\r\n \r\n<h1>Order {order._id}</h1>\r\n<Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n                \r\n              <h2>Shipping</h2>\r\n            \r\n              <p>\r\n                  <strong>Name:</strong>{order.user.name}\r\n              </p>\r\n              <p> \r\n                  <strong>Email:</strong>\r\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              \r\n              <p> \r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},\r\n                {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered on{order.deliveredAt}</Message>\r\n              ) : (\r\n                  <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method: </strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid?(\r\n                  <Message variant='success'>Paid on{order.paidAt}</Message>\r\n              ) : (\r\n                  <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n              {order.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid &&(\r\n                <ListGroupItem>\r\n                  {sdkReady? <Loader/>:(\r\n                    <PayPalButton amount={order.totalPrice}\r\n                     onSuccess={successPaymentHandler}/>\r\n                  )}\r\n                </ListGroupItem>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n  </>\r\n )  \r\n}\r\n\r\nexport default OrderScreen ","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button ,Row ,Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts , deleteProduct , createProduct } from '../actions/productActions'\r\n\r\n\r\nconst ProductListScreen = ({history ,  match}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const \r\n  { loading:loadingDelete, \r\n  error:errorDelete, \r\n  success:successDelete } = productDelete\r\n\r\nconst productCreate = useSelector((state) => state.productCreate)\r\n  const \r\n  { loading:loadingCreate, \r\n  error:errorCreate, \r\n  success:successCreate,\r\n  product :createdProduct } = productCreate\r\n\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo} = userLogin\r\n\r\n  useEffect(() => {\r\n    // dispatch ({type:PRODUCT_CREATE_RESET})\r\n    // if(!userInfo.isAdmin){\r\n    //   history.push ('/login')\r\n    // } \r\n    // if(successCreate){\r\n    //   history.push (`/admin/product/${createdProduct._id}/edit`)\r\n    // }\r\n    // else {\r\n     dispatch (listProducts())\r\n    },\r\n\r\n   [dispatch ,history ,userInfo , successDelete ,successCreate , createdProduct])\r\n     \r\n const  deleteHandler = (id) =>{\r\n   if(window.confirm ('are you sure')){\r\n  dispatch(deleteProduct(id))\r\n   }\r\n }\r\n const createProductHandler = () =>{\r\n  dispatch (createProduct())\r\n}\r\n  return (\r\n    <>\r\n<Row className ='align-items-center'>\r\n  <Col >\r\n  <h1>Products</h1>\r\n  </Col>\r\n  <Col className='text-right'>\r\n    <Button className = 'my-3' onClick={createProductHandler} >\r\n      <i className='fas  fa-plus'></i> \r\n      create Product\r\n    </Button>\r\n  </Col>\r\n</Row>\r\n {loadingDelete && <Loader/>}\r\n {errorDelete && <Message variant='danger' >{errorDelete}</Message>}\r\n {loadingCreate && <Loader/>}\r\n {errorCreate && <Message variant='danger' >{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>${product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td> {product.brand} </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(product._id)}>\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails , updateProduct} from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [countInStock, setCountInStock] = useState('')\r\n  const [description , setDescription] = useState('')\r\n  const [category , setCategory] = useState('')\r\n  const [gender , setGender] = useState('')\r\n  const [uploading , setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const { loading:loadingUpdate, error:errorUpdate ,success:successUpdate } = productUpdate\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    if(successUpdate) {\r\n        dispatch({type:PRODUCT_UPDATE_RESET})\r\n        history.push('/admin/productList')\r\n    }\r\n     else {\r\n       if (!product.name || product._id !== productId) {\r\n            dispatch(listProductDetails(productId))\r\n          } else {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setDescription(product.description)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setGender(product.gender)\r\n     } \r\n      }\r\n    }\r\n  , [dispatch, history, productId, product ,successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n  dispatch(updateProduct({\r\n      _id:productId ,\r\n      name ,\r\n      price,\r\n      description,\r\n      category,\r\n      image,\r\n      gender,\r\n      countInStock\r\n  }))\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='price'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='image'\r\n                placeholder='Enter image Url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n              id='image-file'\r\n              label ='choose File'\r\n              custom\r\n              onChange={uploadFileHandler}>\r\n              </Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='description'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n              {uploading && <Loader/>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='counInStock'>\r\n              <Form.Label>CountInStock</Form.Label>\r\n              <Form.Control\r\n                type='countInStock'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='category'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='gender'>\r\n              <Form.Label>Gender</Form.Label>\r\n              <Form.Control\r\n                type='gender'\r\n                placeholder='Enter gender'\r\n                value={gender}\r\n                onChange={(e) => setGender(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n  \r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n    useEffect(() => {\r\n      console.log('userInfo')\r\n      if (userInfo && userInfo.user.isAdmin) {\r\n        dispatch(listOrders())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n    }, [dispatch, history, userInfo])\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React , {useEffect} from 'react'\r\nimport { Row ,Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { useDispatch } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst Products = ({products}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n      }, [dispatch , ])\r\n\r\n        return (\r\n        <div>\r\n              <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import  React from 'react'\nimport {BrowserRouter as Router , Route} from 'react-router-dom' \nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport {Container} from 'react-bootstrap'\nimport HomeScreen from  './Screens/HomeScreen'\nimport ProductScreen from './Screens/ProductScreen'\nimport CartScreen from './Screens/CartScreen'\nimport LoginScreen from './Screens/LoginScreen'\nimport RegisterScreen from './Screens/RegisterScreen'\nimport ProfileScreen from './Screens/profileScreen'\nimport ShippingScreen from './Screens/ShippingScreen'\nimport PaymentScreen from './Screens/PaymentScreen'\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen'\nimport UserListScreen from './Screens/UserListScreen'\nimport OrderScreen from './Screens/OrderScreen'\nimport UserEditScreen from './Screens/UserEditScreen'\nimport ProductListScreen from './Screens/ProductListScreen'\nimport ProductEditScreen from './Screens/ProductEditScreen'\nimport OrderListScreen from './Screens/OrderListScreen'\nimport {useState} from'react'\nimport { useSelector } from 'react-redux'\nimport Products from './Screens/Products'\n\n\n\nfunction App() {\nconst products = useSelector(state =>state.productList.products)\n  const [filter, setFilter] = useState(\"all\")\n  const productList =(products)=>{\n    switch (filter) {\n      case \"men\":\n        return products.filter(elm=>elm.gender===filter)\n        case \"women\":\n        return products.filter(elm=>elm.gender===filter)\n      \n    \n      default:\n        return products;\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Header setFilter={setFilter}/>\n  <main>\n  <Container>\n  <Route exact path='/products/:gender' render={(props)=><Products {...props} products={productList(products)}/>} />\n <Route path='/' component={HomeScreen} exact />\n  <Route exact path='/search/:keyword' component={HomeScreen} />\n  <Route exact path='/login' component={LoginScreen}  />\n  <Route exact path='/admin/user/:id/edit' component={UserEditScreen}  />\n  <Route exact path='/admin/product/:id/edit' component={ProductEditScreen}  />\n  <Route exact path='/register' component={RegisterScreen}  />\n  <Route exact path='/profile' component={ProfileScreen}  />\n  <Route exact path='/product/:id' component={ProductScreen}  />\n  <Route exact path='/cart/:id?' component={CartScreen}  />\n  <Route exact path='/shipping' component={ShippingScreen}/>\n  <Route exact path='/payment' component={PaymentScreen}/>\n  <Route exact path='/placeorder' component={PlaceOrderScreen} />\n  <Route exact path='/order/:id' component={OrderScreen}  />\n  <Route exact path='/admin/userlist' component={UserListScreen}  />\n  <Route exact path='/admin/productlist' component={ProductListScreen}  />\n  <Route exact path='/admin/orderlist' component={OrderListScreen}  />\n\n\n\n  \n  </Container>\n</main>\n<Footer/>\n</Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}